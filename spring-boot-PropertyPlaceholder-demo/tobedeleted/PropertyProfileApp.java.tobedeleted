package app.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;

// import com.apple.eawt.Application;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.CommandLineRunner;
import org.springframework.context.annotation.Profile;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Component;

import java.util.Arrays;

@SpringBootApplication
public class PropertyProfileApp {
    public static final void main(String...args) {

        //        SpringApplication.run(PropertyProfileApp.class, args).close();

        new SpringApplicationBuilder(PropertyProfileApp.class)
//                .profiles("west")
                .run(args).close();

    }        
}      


@Component
class ProfileManager implements CommandLineRunner {

      @Autowired
      private Environment environment;

    @Value("${message}")
    private String message;

    @Override
    public void run(String... args) throws Exception {

        System.out.println("Message: " + message);

        System.out.println("Current active profiles are: " +
                Arrays.toString(environment.getActiveProfiles()));
    
            }
}

@Component
@Profile(value="east")
class BeanEast implements CommandLineRunner {

    @Value("${message}")
    private String message;


    @Override
    public void run(String... args) throws Exception {

        System.out.println("Message: " + message);
        System.out.println("In east environment");
    }
}

@Component
@Profile(value="west")
class BeanWest implements CommandLineRunner {

        @Value("${message}")
    private String message;


    @Override
    public void run(String... args) throws Exception {
        System.out.println("Message: " + message);
        System.out.println("In west environment");
    }
}

@Component
@Profile(value={"default"})
class MyRunner6 implements CommandLineRunner {

    @Value("${message}")
    private String message;

    @Override
    public void run(String... args) throws Exception {

        System.out.println("Message: " + message);
        System.out.println("In default environment");
    }
}

